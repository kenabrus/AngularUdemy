npm i save bootstrap@3  // install localy in this project

ng g c

string interpolation {{}}   <p>{{userName}}</p>
property binding [] <button type="button" [attr.aria-label]="actionName">{{actionName}} with Aria</button>
event binding ()  (click)="doSamething()"
Two-Way-Binding [()]  [(size)]="fontSizePx"
Important: For Two-Way-Binding (covered in the next lecture) to work, you need to enable the ngModel  directive. This is done by adding the FormsModule  to the imports[]  array in the AppModule.
You then also need to add the import from @angular/forms  in the app.module.ts file:
import { FormsModule } from '@angular/forms';

____  Directives  ________
Directives are instructions in the DOM

Structural directives:
*ngIf   <p *ngIf="serverStatus; else noServer">Serwer was created with name {{serverName}}</p>
        <ng-template #noServer>
          <p>No server was created</p>
        </ng-template>
*ngFor   *ngFor="let server of servers"

Attribute directives:
[ngStyle] = "{backgroundColor : 'red'}"  [ngStyle] = "{'background-color' : 'red'}"
<some-element [ngStyle]="{'font-style': styleExp}">...</some-element>

[ngClass]="{online: getServerStatus() === 'online'}"
 <some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>

 _____________ section 3 _____________

 Property & Event Binding

ng g c _components/recipes --skip-tests=true
ng g c _components/recipes/recipe-list --skip-tests=true
ng g c _components/recipes/recipe-list/recipe-item --skip-tests=true
ng g c _components/recipes/recipe-detail --skip-tests=true
ng g c _components/recipes/recipe-item --skip-tests=true
ng g c _components/shopping-list --skip-tests=true
ng g c _components/shopping-list/shopping-edit --skip-tests=true

________ Section 5 - Components & Databinding Deep Dive _____________

HTML Elements                 Directives              Components
Native Properties             Custom Properties       Custom Properties
& Events                      & Events                & Events

from server-form to server-list
from server-list to server-element
display server-element in server-list

@Input()
@Outpt()
new EventEmiter<>()

encapsulation: ViewEncapsulation.None
input reference #serverNameInput
@ViewChild('')
<ng-content></ng-content>  - input html elements from outside

ngOnChanges() called multipule times after a bounde input property changed
ngOnInit()  - called once the component is initialized
ngDoCheck() called during every change detection run
ngAfterContentInit()
ngAfterContentChecked()
ngAfterViewInit()
ngAfterViewChecked()
ngOnDestroy()

